package com.example.applicationscanner;

import java.util.ArrayList;

import android.app.Activity;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager.NameNotFoundException;
import android.util.Log;

public class Populate_list extends Activity{
	
	static ArrayList<String> costappname = new ArrayList<String>();
	static ArrayList<String> dataappnames = new ArrayList<String>();
	static ArrayList<String> otherappnames = new ArrayList<String>();
	
	@Override
	protected void onCreate() {
		super.onStart();
		getApplicationName();
	}
	
	public void getApplicationName() {
		ArrayList<ApplicationInfo> abc = getInstalledApplicationInfo();
		int total_apps = abc.size();
		PackageInfo pckinfo = new PackageInfo();
		String[] permission = new String[100];
		String packagename;
		ApplicationInfo[] appinfo = new ApplicationInfo[total_apps];

		Log.i("Abhi", "total:" + total_apps);

		;
		for (int i = 0; i < total_apps; i++) {
			Log.i("Abhi", "count:" + i);
			appinfo[i] = abc.get(i);
			packagename = appinfo[i].packageName;
			try {
				pckinfo = getPackageManager().getPackageInfo(packagename, 4096);
			} catch (NameNotFoundException e) {

			}
			;
			permission = pckinfo.requestedPermissions;
			if (permission == null) {
				Log.i("Abhi", "no permission");
			} else {
				for (String j : permission) {
					Log.i("Abhi", "no permission:" + permission);
					if (j.equals("android.permission.CALL_PHONE")
							|| j.equals("android.permission.SEND_SMS")
							|| j.equals("android.permission.CALL_PRIVILEGED")
							|| j.equals("android.permission.INTERNET")) {
						costappname.add(getPackageManager()
								.getApplicationLabel(appinfo[i]).toString());
						break;
					}
					else if (j.equals("android.permission.ACCOUNT_MANAGER")
							|| j.equals("android.permission.MANAGE_ACCOUNTS")
							|| j.equals("android.permission.READ_CONTACTS")) {
						dataappnames.add(getPackageManager()
								.getApplicationLabel(appinfo[i]).toString());
						break;
					}
					else{
						otherappnames.add(getPackageManager()
								.getApplicationLabel(appinfo[i]).toString());
						break;
					}
				}
			}
		}
		
	}

	public ArrayList<ApplicationInfo> getInstalledApplicationInfo() {
		ArrayList<ApplicationInfo> appinfo = (ArrayList<ApplicationInfo>) getPackageManager()
				.getInstalledApplications(0);
		return appinfo;
	}
	
	public static ArrayList<String> listForTab1(){
		return costappname;
	}
	
	public static ArrayList<String> listForTab2(){
		return dataappnames;
	}
	
	public static ArrayList<String> listForTab3(){
		return otherappnames;
	}
}
